MySQL的基本操作

1. 数据库的简介

1.1. 简介

**数据库 : **

数据库, 全称 Data Base, 简称DB。指的是长期保存在物理存储设备，数据按照一定的规则组织起来，可以被各种用户和各种程序共享。

数据库管理系统 ：

数据库管理系统, 全称 Data Base Management System, 简称 DBMS。指的是用来管理和操作数据的大型软件。用来建立、使用、维护数据，对数据库进行统一的管理和控制，以保证数据的完整性和安全性。用户可以通过数据库管理系统来访问数据库中的数据。

1.2. 常见的数据库管理系统

Oracle : 目前在业界最成功的关系型数据库管理系统，可以运行在 Windows、UNIX、Linux等主流的操作系统，完全支持所有的工业标准，并获取最高级别的ISO标准安全性认证。
MySQL : 是一种关系型数据库管理系统。由瑞典 MySQL AB 公司研发，目前属于 Oracle 旗下。是目前最流行的关系型数据库管理系统之一。
SQLServer : 是微软推出的关系型数据库管理系统。使用范围没有MySQL、Oracle广。
DB2 : 是IBM的。
备注: 关系型数据库管理系统，用来管理关系型数据库的数据库管理系统。

全称: Relational Database Management System, 简称: RDBMS
1.3. 关系型数据库、非关系型数据库

关系型数据库

依据所有存储的数据模型之间的关系，建立的数据库
所谓的关系模型, 指的是 “一对一、一对多、多对多” 等关系模型
非关系型数据库(NOSQL)

采用了没有特定关系模型来组织的数据库
NOSQL存储采用的是键值对
2. MySQL的安装与卸载

2.1. MySQL的安装

2.2. MySQL的卸载

1. 控制面板 -> 程序 -> 卸载程序
2. 找到 MySQL Server -> 右键 -> 卸载
3. 打开C盘 -> 打开文件夹 ProgramData(隐藏文件夹) -> 删除 MySQL 文件夹
4. 清除注册表信息 (打开注册表: Win + r, 输入: regedit)
	HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\EventLog\Application\MySQL
	HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\EventLog\Application\MySQL
	HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\EventLog\Application\MySQL
2.3. 启动、停止MySQL服务

我的电脑 -> 右键 -> 管理 -> 服务 -> 找到MySQL57 -> 右键



以管理员的身份运行终端

开始 -> Windows系统 -> 命令提示符 -> 右键 -> 更多 -> 以管理员身份运行

输入相应的指令来开启服务和停止服务

net start mysql57			// 开启服务
net stop mysql57			// 关闭服务
2.4. 登录到数据库

配置环境变量

我的电脑 -> 右键 -> 属性 -> 高级系统设置 -> 环境变量 -> 系统变量 -> Path
在命令行通过指令进行登录

mysql -u root -p 
mysql -uroot -p123456
3. SQL语言简介

3.1. SQL的简介

SQL: Structure Query Language, 结构化查询语言, SQL最早是被美国国家标准局(ANSI)确定为关系型数据库语言的美国标准。后来被国际化标准组织(ISO)采纳为关系型数据库的国际标准。

每个数据库管理系统都支持国际标准的SQL。	: 普通话

但是每个数据库管理系统也都在国际标准的基础上，增加了自己的拓展。	: 方言
SQL其实是一种标准化的语言，允许我们可以对一个数据库进行操作，例如: 增、删、改、查

而这些操作: 创建项目(Create)、查询(Read)、修改(Update)、删除(Delete): 被称为 CRUD 操作

3.2. SQL的分类

DDL(Data Definition Language), 数据定义语言, 用来定义数据库对象(数据库、表、列)
DML(Data Manipulation Language), 数据操作语言, 用来定义数据库查询操作(增、删、改)
DQL(Data Query Language), 数据查询语言, 用来从数据库中查询数据
DCL(Data Control Language), 数据库控制语言, 用于设置访问权限和安全级别
**备注：**在SQL中，SQL语句是不区分大小写的

4. DDL

4.1. 数据库操作

创建数据库

create database my_first_database;						// 采用默认的字符集创建数据库
create database my_first_database character set gbk;	// 采用指定的字符集创建数据库
查看数据库

show databases;				// 查看所有的数据库
show create database name;	// 查看创建指定数据库时候的语句
修改数据库

alter database dbname character set gbk;	// 将指定数据库的字符集修改
删除数据库

drop database dbname;
切换当前使用的数据库

use dbname;					// 切换当前正在使用的数据库
select database();			// 查询当前正在使用哪一个数据库
4.2. 表操作

表

数据在数据库中是以表的形式进行存储的，一个表设有若干个字段，数据按照这些字段进行存储。

每一个字段，除了要设置字段的名字以外，还需要设置类型:

int			: 整型，存储整数
double		: 浮点型, 存储浮点型数据。
			: double(4,3), 表示这个double数据最多只能有4位, 其中还需要有3位是小数部分, 9.999
char		: 字符串, 需要定义长度, 例如: char(5)
			: char(5), 每个数据占用长度固定为5, 例如: 'as' 占用长度 5
varchar		: 可变长度字符串
			: varchar(5), 其实这里设置的是字符串最大可占用的长度, 例如: 'as' 占用长度 2
text		: 字符串类型
blob		: 字节类型
date		: 日期类型, 格式为 yyyy-MM-dd
time		: 时间类型, 格式为 hh:mm:ss
timestamp	: 时间戳类型, yyyy-MM-dd hh:mm:ss, 会自动赋值
datetime	: 时间类型, yyyy-MM-dd hh:mm:ss
建表

create table 表名(字段1 类型, 字段2 类型, ...);
查看表

show tables;				 # 查询数据库中所有的表
show create table 表名;		# 查询数据库中指定的表的创建信息
desc 表名;					# 查询一个表的字段信息
删除表

drop table 表名;
修改表信息

# 动态添加一个字段
alter table 表名 add 字段名 类型
# 动态删除一个字段
alter table 表名 drop 字段名
# 动态修改一个字段
# 修改一个字段的类型
alter table 表名 modify 字段名 新的类型
# 修改一个字段的名字
alter table 表名 change 字段名 新的字段名 类型
# 修改一张表的字符集
alter table 表明
# 修改表名
alter table 表名 rename 新表名
